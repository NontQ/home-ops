---
version: "3"

tasks:

  verify:
    desc: Verify flux meets the prerequisites
    cmd: flux check --pre

  install:
    desc: Install Flux into your cluster
    cmds:
      - kubectl apply --kustomize {{.KUBERNETES_DIR}}/bootstrap
      - cat {{.SOPS_AGE_KEY_FILE}} | kubectl -n flux-system create secret generic sops-age --from-file=age.agekey=/dev/stdin
      - sops --decrypt {{.KUBERNETES_DIR}}/flux/vars/cluster-secrets.sops.yaml | kubectl apply -f -
      - sops --decrypt {{.KUBERNETES_DIR}}/flux/vars/cluster-secrets-user.sops.yaml | kubectl apply -f -
      - kubectl apply -f {{.KUBERNETES_DIR}}/flux/vars/cluster-settings.yaml
      - kubectl apply -f {{.KUBERNETES_DIR}}/flux/vars/cluster-settings-user.yaml
      - kubectl apply --kustomize {{.KUBERNETES_DIR}}/flux/config
    preconditions:
      - sh: test -f {{.SOPS_AGE_KEY_FILE}}
        msg: |
          Age key file is not found. Did you forget to create it?
    vars:
      SOPS_AGE_KEY_FILE: "{{.ROOT_DIR}}/age.key"

  reconcile:
    desc: Force update Flux to pull in changes from your Git repository
    cmd: flux reconcile -n flux-system kustomization cluster --with-source

  hr-restart:
    desc: Restart all failed Helm Releases
    cmds:
      - kubectl get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -L1 bash -c 'flux suspend hr $0 -n $1'
      - kubectl get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -L1 bash -c 'flux resume hr $0 -n $1'

  nodes:
    desc: List all the nodes in your cluster
    cmd: kubectl get nodes {{.CLI_ARGS | default "-o wide"}}

  pods:
    desc: List all the pods in your cluster
    cmd: kubectl get pods {{.CLI_ARGS | default "-A"}}

  kustomizations:
    desc: List all the kustomizations in your cluster
    cmd: kubectl get kustomizations {{.CLI_ARGS | default "-A"}}

  helmreleases:
    desc: List all the helmreleases in your cluster
    cmd: kubectl get helmreleases {{.CLI_ARGS | default "-A"}}

  helmrepositories:
    desc: List all the helmrepositories in your cluster
    cmd: kubectl get helmrepositories {{.CLI_ARGS | default "-A"}}

  gitrepositories:
    desc: List all the gitrepositories in your cluster
    cmd: kubectl get gitrepositories {{.CLI_ARGS | default "-A"}}

  certificates:
    desc: List all the certificates in your cluster
    cmds:
      - kubectl get certificates {{.CLI_ARGS | default "-A"}}
      - kubectl get certificaterequests {{.CLI_ARGS | default "-A"}}

  ingresses:
    desc: List all the ingresses in your cluster
    cmd: kubectl get ingress {{.CLI_ARGS | default "-A"}}

  resources:
    desc: Gather common resources in your cluster, useful when asking for support
    cmds:
      - task: nodes
      - task: kustomizations
      - task: helmreleases
      - task: helmrepositories
      - task: gitrepositories
      - task: certificates
      - task: ingresses
      - task: pods

  sync-secrets:
    desc: Sync ExternalSecret resources
    vars:
      secret: '{{ .secret | default ""}}'
      namespace: '{{.namespace | default "default"}}'
    cmd: |
      {{if eq .secret ""}}
        kubectl get externalsecret.external-secrets.io --all-namespaces --no-headers -A | awk '{print $1, $2}' \
          | xargs --max-procs=4 -l bash -c 'kubectl -n $0 annotate externalsecret.external-secrets.io $1 force-sync=$(date +%s) --overwrite'
      {{else}}
        kubectl -n {{.namespace}} annotate externalsecret.external-secrets.io {{.secret}} force-sync=$(date +%s) --overwrite
      {{end}}
    preconditions:
    - kubectl -n {{.namespace}} get externalsecret {{.secret}}

  delete-failed-pods:
    desc: Deletes failed pods
    cmds:
    - kubectl delete pods --field-selector status.phase=Failed -A --ignore-not-found=true

  delete-succeeded-pods:
    desc: Deletes succeeded pods
    cmds:
    - kubectl delete pods --field-selector status.phase=Succeeded -A --ignore-not-found=true

  hr-suspend:
    desc: Suspend all Flux HelmReleases
    cmds:
      - |
        flux get helmrelease --all-namespaces --no-header | awk '{print $1, $2}' \
          | xargs -L 1 bash -c 'flux -n $0 suspend helmrelease $1'
  hr-resume:
    desc: Resume all Flux HelmReleases
    cmds:
      - |
        flux get helmrelease --all-namespaces --no-header | awk '{print $1, $2}' \
          | xargs -L 1 bash -c 'flux -n $0 resume helmrelease $1'

  restart-nginx:
    desc: Restart the nginx ingress controllers
    cmd: kubectl get deployments -n networking | grep nginx | awk '{ print $1 }' | xargs -n1 kubectl rollout restart deployment -n networking

  count-pods:
    desc: Count the number of pods in your cluster per node
    cmd: kubectl get pods -A -o jsonpath='{range .items[?(@.spec.nodeName)]}{.spec.nodeName}{"\n"}{end}' | sort | uniq -c | sort -rn | sed -e 's/[ \t]*//'
    